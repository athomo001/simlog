#Okta Logs (JSON-like text)
timestamp={auth_timestamp} eventType=user.session.start actor.id={actor_id} actor.alternateId={actor_user} client.ipAddress={client_ip_auth} client.userAgent.rawUserAgent="{user_agent_auth}" authenticationContext.authenticationStep=SUCCESS outcome.result=SUCCESS displayMessage="User login successful" target.id={target_user_id} target.alternateId={target_user_auth} securityContext.isImpossibleTravel=false device.trustLevel=TRUSTED location.city={location_city} location.country={location_country}
timestamp={auth_timestamp} eventType=user.authentication.auth_via_mfa actor.id={actor_id} actor.alternateId={actor_user} client.ipAddress={client_ip_auth} authenticationContext.mfaProvider=OKTA authenticationContext.mfaFactor={mfa_factor} outcome.result=FAILURE outcome.reason="{reason_auth}" displayMessage="MFA verification failed" target.id={target_user_id} target.alternateId={target_user_auth}
timestamp={auth_timestamp} eventType=user.account.lock actor.id=System client.ipAddress={client_ip_auth} outcome.result=SUCCESS displayMessage="User account locked" target.id={target_user_id} target.alternateId={target_user_auth} reason="Exceeded failed login attempts"
timestamp={auth_timestamp} eventType=application.user_membership.add actor.id={admin_actor_id} actor.alternateId={admin_user} client.ipAddress={client_ip_auth} outcome.result=SUCCESS displayMessage="User added to application" target.0.id={target_user_id} target.0.alternateId={target_user_auth} target.1.id={app_id} target.1.alternateId={application_auth} target.1.type=AppInstance
timestamp={auth_timestamp} eventType=user.mfa.factor.deactivate actor.id={actor_id} actor.alternateId={actor_user} client.ipAddress={client_ip_auth} authenticationContext.mfaProvider=OKTA authenticationContext.mfaFactor={mfa_factor} outcome.result=SUCCESS displayMessage="MFA factor deactivated" target.id={target_user_id} target.alternateId={target_user_auth}
timestamp={auth_timestamp} eventType=policy.evaluate_sign_on actor.id={actor_id} actor.alternateId={actor_user} client.ipAddress={client_ip_auth} client.geographicalContext.country={location_country} outcome.result=DENY outcome.reason="Denied access due to sign-on policy" displayMessage="Sign-on policy denial" policy.id={policy_id} policy.name={policy_name_auth} policy.type=OKTA_SIGN_ON
timestamp={auth_timestamp} eventType=user.session.start actor.id={actor_id} actor.alternateId={actor_user} client.ipAddress={client_ip_auth} client.userAgent.rawUserAgent="{user_agent_auth}" authenticationContext.authenticationStep=SUCCESS outcome.result=SUCCESS displayMessage="User login successful from untrusted device" target.id={target_user_id} target.alternateId={target_user_auth} securityContext.isImpossibleTravel=false device.trustLevel=UNTRUSTED
timestamp={auth_timestamp} eventType=core.api_token.create actor.id={admin_actor_id} actor.alternateId={admin_user} client.ipAddress={client_ip_auth} outcome.result=SUCCESS displayMessage="API token created" target.0.id={api_token_id} target.0.type=Token target.0.displayName={api_token_name}
timestamp={auth_timestamp} eventType=user.authentication.auth_via_mfa actor.id={actor_id} actor.alternateId={actor_user} client.ipAddress={client_ip_auth} authenticationContext.mfaProvider=GOOGLE authenticationContext.mfaFactor=OTP outcome.result=SUCCESS displayMessage="MFA verification successful" target.id={target_user_id} target.alternateId={target_user_auth}
timestamp={auth_timestamp} eventType=user.session.end actor.id={actor_id} actor.alternateId={actor_user} client.ipAddress={client_ip_auth} outcome.result=SUCCESS displayMessage="User session terminated" target.id={target_user_id} target.alternateId={target_user_auth} reason=USER_LOGOUT
#Duo Security Logs (Syslog/JSON-like text)
timestamp={auth_timestamp} integration={integration_name} factor={mfa_factor} result=FAILURE reason="{reason_auth}" username={username_duo} ip={client_ip_auth} host={hostname_duo} location="{location_city}, {location_country}" device_trusted={device_trusted_duo} event_type=auth_failed description="User authentication failed: Invalid passcode"
timestamp={auth_timestamp} integration={integration_name} factor=Duo Push result=SUCCESS username={username_duo} ip={client_ip_auth} host={hostname_duo} location="{location_city}, {location_country}" device_trusted={device_trusted_duo} event_type=auth_success description="User approved Duo Push request" access_device_os={access_device_os} access_device_browser={access_device_browser}
timestamp={auth_timestamp} integration={integration_name} factor=Bypass result=SUCCESS username={username_duo} ip={client_ip_auth} host={hostname_duo} location="{location_city}, {location_country}" device_trusted=True event_type=auth_bypass description="User authentication bypassed due to policy" bypass_reason="{bypass_reason}" policy={policy_name_duo}
timestamp={auth_timestamp} integration={integration_name} factor=Phone Call result=FAILURE reason="User marked as fraud" username={username_duo} ip={client_ip_auth} host={hostname_duo} location="{location_city}, {location_country}" event_type=auth_fraud description="User reported authentication attempt as fraudulent"
timestamp={auth_timestamp} integration={integration_name} factor={mfa_factor} result=FAILURE reason="Denied access from untrusted device" username={username_duo} ip={client_ip_auth} host={hostname_duo} location="{location_city}, {location_country}" device_trusted=False event_type=auth_denied_untrusted_device description="Access denied by policy for untrusted device" policy={policy_name_duo}
timestamp={auth_timestamp} action=enrollment_activated username={username_duo} description="User completed Duo enrollment" ip={client_ip_auth} enrollment_type={enrollment_type} event_type=admin_action
timestamp={auth_timestamp} action=admin_login username={admin_user_duo} result=SUCCESS ip={client_ip_auth} description="Admin login to Duo console successful" event_type=admin_login
timestamp={auth_timestamp} action=admin_settings_changed username={admin_user_duo} description="Policy '{policy_name_duo}' modified" ip={client_ip_auth} event_type=admin_action setting_details="{setting_details}"
timestamp={auth_timestamp} integration={integration_name} factor=U2F result=SUCCESS username={username_duo} ip={client_ip_auth} host={hostname_duo} location="{location_city}, {location_country}" device_trusted=True event_type=auth_success description="User authenticated with security key" u2f_key_name="{u2f_key_name}"
timestamp={auth_timestamp} integration={integration_name} factor=SMS Passcode result=FAILURE reason="Timeout" username={username_duo} ip={client_ip_auth} host={hostname_duo} event_type=auth_failed description="SMS passcode authentication timed out"
#FreeIPA Logs (Syslog format)
{bsd_timestamp} {hostname_ipa} krb5kdc{pid_ipa}: TGS_REQ (6 etypes {aes256,aes128,...}) {client_ip_auth}: ISSUE: authtime {auth_timestamp}, etypes {aes128-cts} {requesting_user}@{realm} for {service_principal}@{realm}
{bsd_timestamp} {hostname_ipa} krb5kdc{pid_ipa}: AS_REQ (4 etypes {aes256,aes128,...}) {client_ip_auth}: PREAUTH_FAILED: {requesting_user}@{realm} for krbtgt/{realm}@{realm}, Decryption integrity check failed ({error_code_kerberos})
{bsd_timestamp} {hostname_ipa} krb5kdc{pid_ipa}: AS_REQ (7 etypes {aes256,aes128,...}) {client_ip_auth}: LOCKED_OUT: {requesting_user}@{realm} for krbtgt/{realm}@{realm}, Server determined request is locked out
{bsd_timestamp} {hostname_ipa} slapd[{pid_ipa}]: conn={conn_id} op=1 BIND dn="{bind_dn}" method={auth_method_ldap} mech=SIMPLE ssf=0
{bsd_timestamp} {hostname_ipa} slapd[{pid_ipa}]: conn={conn_id} op=2 RESULT tag=97 err={ldap_err_code} text="Invalid credentials"
{bsd_timestamp} {hostname_ipa} slapd[{pid_ipa}]: conn={conn_id} op=3 ADD dn="{new_user_dn}"
{bsd_timestamp} {hostname_ipa} slapd[{pid_ipa}]: conn={conn_id} op=4 DELETE dn="{deleted_user_dn}"
{bsd_timestamp} {hostname_ipa} slapd[{pid_ipa}]: conn={conn_id} op=5 MOD dn="{user_dn}" changetype=modify replace=memberOf memberOf={new_group_dn}
{bsd_timestamp} {hostname_ipa} kadmin[{pid_ipa}]: Kerberos password change for {user}@{realm} from {client_ip_auth} by {admin_user_ipa}@{realm} succeeded
{bsd_timestamp} {hostname_ipa} ipa-dnskeysyncd[{pid_ipa}]: DNS key synchronization with master {master_ipa_hostname} failed: {sync_error}
{bsd_timestamp} {hostname_ipa} sudo: {requesting_user} : TTY={tty_ipa} ; PWD={pwd_ipa} ; USER=root ; COMMAND={command_ipa} ; authentication failure
{bsd_timestamp} {hostname_ipa} sudo: {requesting_user} : TTY={tty_ipa} ; PWD={pwd_ipa} ; USER=root ; COMMAND={command_ipa} ; command executed successfully
{bsd_timestamp} {hostname_ipa} httpd[{pid_ipa}]: [auth_kerb:error] [pid {pid_ipa}] [client {client_ip_auth}] KRB5 Error: ({error_code_kerberos}) Decrypt integrity check failed accessing /ipa/session/json
#Active Directory Advanced Logs (Windows Event Log style text - simplified)
EventID=4771 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=Kerberos pre-authentication failed. Account Name: {account_name} Service Name: krbtgt/{realm} Client Address: {client_ip_auth} Error Code: 0x18 Status Code: {kerberos_status_code} # KDC_ERR_PREAUTH_FAILED (Bad password)
EventID=4768 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=A Kerberos authentication ticket (TGT) was requested. Account Name: {account_name} Supplied Realm Name: {realm} Client Address: {client_ip_auth} Ticket Options: {tgt_options} Result Code: 0x0 Status Code: {kerberos_status_code}
EventID=4769 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=A Kerberos service ticket was requested. Account Name: {account_name}@{realm} Service Name: {service_name_kdc} Service ID: {service_sid} Client Address: {client_ip_auth} Ticket Options: {tkt_options} Result Code: 0x0 Status Code: {kerberos_status_code} # Look for non-computer accounts requesting tickets for computer services (Kerberoasting)
EventID=4740 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=A user account was locked out. SubjectUserName: System TargetUserName: {locked_account_name} TargetDomainName: {realm} CallerMachineName: {source_workstation}
EventID=4728 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=A member was added to a security-enabled global group. SubjectUserName: {admin_user_ad} TargetUserName: {added_user} TargetDomainName: {realm} GroupName: Administrators GroupDomainName: {realm}
EventID=4732 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=A member was added to a security-enabled local group. SubjectUserName: {admin_user_ad} TargetUserName: {added_user} TargetDomainName: {realm} GroupName: Domain Admins GroupDomainName: {realm}
EventID=4776 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=The computer attempted to validate the credentials for an account. Authentication Package: NTLM Account Name: {account_name} Workstation: {source_workstation} Status Code: 0xC000006A # STATUS_WRONG_PASSWORD (Can indicate Pass-the-Hash/Spray)
EventID=4625 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={target_server_ad} Message=An account failed to log on. SubjectUserName: - Logon Type: 3 (Network) Account Name: {account_name} Workstation Name: {source_workstation} Failure Reason: %%2313 Status Code: 0xC000006D # Unknown user name or bad password (Brute Force/Spray)
EventID=4673 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=A privileged service was called. SubjectUserName: {account_name} Service Name: kadmin/changepw Privileges: SeTcbPrivilege # Password change related service
EventID=5136 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=A directory service object was modified. SubjectUserName: {admin_user_ad} DS Name: {domain_dns_name} Object DN: {object_dn} Object Class: user Attribute LDAP Display Name: userAccountControl Value: {uac_value} # UAC changes (e.g., enable/disable account)
EventID=4662 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=An operation was performed on an object. SubjectUserName: {account_name} Object Server: Security Object Type: SAM_DOMAIN Object Name: SAM Access Mask: {access_mask_sam} # Potential DCSync (requires specific auditing)
EventID=1102 Source=Microsoft-Windows-Eventlog TimeGenerated={auth_timestamp} Computer={target_server_ad} Message=The audit log was cleared. SubjectUserName: {admin_user_ad} # Defense Evasion
EventID=4719 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=System audit policy was changed. SubjectUserName: {admin_user_ad} Category: Logon/Logoff Subcategory GUID: {subcategory_guid} Changes: Failure removed # Tampering with audit policy
EventID=4769 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={dc_hostname} Message=A Kerberos service ticket was requested. Account Name: {service_account_name}$@{realm} Service Name: krbtgt Service ID: {service_sid} Client Address: {client_ip_auth} Ticket Options: {tkt_options} Result Code: 0x1F Status Code: {kerberos_status_code} # KDC_ERR_S_PRINCIPAL_UNKNOWN (Potential Kerberoasting SPN issue)
EventID=4798 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={target_server_ad} Message=A user's local group membership was enumerated. SubjectUserName: {enumerating_user} TargetUserName: {target_user_auth} CallerProcessName: C:\Windows\System32\net1.exe # Reconnaissance
EventID=4688 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={target_server_ad} Message=A new process has been created. Creator Process Name: C:\Windows\System32\services.exe New Process Name: C:\Windows\Temp{malware_svc_exe} Security ID: SYSTEM # Service installing malware
EventID=4624 Source=Microsoft-Windows-Security-Auditing TimeGenerated={auth_timestamp} Computer={target_server_ad} Message=An account was successfully logged on. SubjectUserName: - Logon Type: 10 (RemoteInteractive/RDP) Account Name: {account_name} Workstation Name: {source_workstation} Source Network Address: {client_ip_auth} # Successful RDP login